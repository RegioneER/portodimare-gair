version: '2.2'
services:

  db:
    image: geonode/postgis:10
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    env_file:
      - ./scripts/docker/env/production/db.env

  geoserver:
    image: geonode/geoserver:2.14.3
    restart: unless-stopped
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data
    env_file:
      - ./scripts/docker/env/production/geoserver.env

  django:
    restart: unless-stopped
    build: .
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    # command: paver start_django -b 0.0.0.0:8000
    # command: uwsgi --ini uwsgi.ini
    volumes:
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
    env_file:
      - ./scripts/docker/env/production/django.env

  geonode:
    image: geonode/nginx:geoserver
    restart: unless-stopped
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - geoserver
    ports:
      - "80:80"
    volumes:
      - statics:/mnt/volumes/statics
  
  r_geospatial: 
    image: gmameli/r-geospatial:latest
    restart: unless-stopped
    container_name: r4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    ports:
      - "8787:8787"
      - "9090:9090"
    #command: bash -c "/init & python rpyserve.py --hostname 0.0.0.0 --port 9090 > /var/log/rpyserve.log"
    #working_dir: /mnt/volumes/statics/static/script_r/
    volumes:
      - statics:/mnt/volumes/statics
    env_file:
      - ./scripts/docker/env/production/r_geospatial.env

  data-dir-conf:
    image: geonode/geoserver_data:2.14.3
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

volumes:
  statics:
    name: ${COMPOSE_PROJECT_NAME}-statics
  geoserver-data-dir:
    name: ${COMPOSE_PROJECT_NAME}-gsdatadir
  dbdata:
    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbbackups:
    name: ${COMPOSE_PROJECT_NAME}-dbbackups
  rabbitmq:
    name: ${COMPOSE_PROJECT_NAME}-rabbitmq
